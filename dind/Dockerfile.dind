# Note: You can use any Debian/Ubuntu based image you want. 
ARG IMAGE
FROM ${IMAGE}
# Enable new "BUILDKIT" mode for Docker CLI
ENV DOCKER_BUILDKIT=1 \
    PATH=$PATH:/usr/local/go/bin \
    TERM=xterm-256color

# Options
ARG INSTALL_ZSH="true"
ARG UPGRADE_PACKAGES="false"
ARG USE_MOBY="true"
ARG USERNAME=vscode

# To use DIND properly we have to be root apparently?
USER root

# Install needed packages and setup non-root user. Use a separate RUN statement to add your own dependencies.
COPY resources/dind/*.sh /usr/local/share/

RUN apt-get clean \
    && apt-get update \
    && /bin/bash /usr/local/share/docker-debian.sh \
    && apt update \
    && apt -y install make wget \
    && rm -rf /usr/local/share/docker-debian.sh \
    && apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/* /tmp/library-scripts/

# Setting the ENTRYPOINT to docker-init.sh will configure non-root access to 
# the Docker socket if "overrideCommand": false is set in devcontainer.json. 
# The script will also execute CMD if you need to alter startup behaviors.

ENTRYPOINT [ "/usr/local/share/docker-init.sh" ]
CMD ["sleep", "infinity" ]

